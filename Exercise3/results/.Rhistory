setwd("~/3Term/OmicsTechniques/Montalban_Aina-OmicsTechniques/Exercise3")
#---------------------------------------------------------------------------------------------
###FOLDER DESTINATION DEFINITIONS
#---------------------------------------------------------------------------------------------
workingDir <-getwd()
dataDir <- file.path(workingDir, "dades")
resultsDir <- file.path(workingDir, "results")
setwd(resultsDir)
installifnot <- function (pkg){
if (!require(pkg, character.only=T)){
BiocManager::install(pkg)
}else{
require(pkg, character.only=T)
}
}
installifnot("pd.mogene.1.0.st.v1")
installifnot("pd.clariom.s.mouse")
installifnot("mogene10sttranscriptcluster.db")
installifnot("oligo")
installifnot("limma")
installifnot("Biobase")
installifnot("gridSVG")
installifnot("arrayQualityMetrics")
require("pd.clariom.s.mouse")
pd.clariom.s.mouse
getAnnMap
eset_filtered <- nsFilter(eset, var.func=IQR,
var.cutoff=0.75, var.filter=TRUE,
filterByQuantile=TRUE)
eset_filtered <- nsFilter(eset, var.func=IQR,
var.cutoff=0.75, var.filter=TRUE,
filterByQuantile=TRUE)
installifnot("pd.mogene.1.0.st.v1")
installifnot("pd.clariom.s.mouse")
installifnot("mogene10sttranscriptcluster.db")
installifnot("oligo")
installifnot("limma")
installifnot("Biobase")
installifnot("gridSVG")
installifnot("arrayQualityMetrics")
installifnot("genefilter")
installifnot("multtest")
installifnot("annotate")
installifnot("xtable")
installifnot("gplots")
installifnot("scatterplot3d")
#---------------------------------------------------------------------------------------------
###LOAD DATA: TARGETS AND CEL FILES.
#---------------------------------------------------------------------------------------------
#TARGETS
# Read the targets
targets <- read.csv(file = (file.path(dataDir,"targets.txt")),header = TRUE, sep = "")
targets
#CELFILES
# Read cel files
CELfiles <- list.celfiles(file.path(dataDir))
CELfiles
rawData <- read.celfiles(file.path(dataDir,CELfiles))
#DEFINE SOME VARIABLES FOR PLOTS
# Select sample names and colors
sampleNames <- as.character(targets$shortName)
sampleColor <- as.character(targets$Colors)
sampleNames
sampleColor
#---------------------------------------------------------------------------------------------
###DATA NORMALIZATION
#---------------------------------------------------------------------------------------------
eset<-rma(rawData)
print(annotation(eset)) ##[1] "hgu95av2"
library("hgu95av2.db") library('genefilter')
columns(pd.clariom.s.mouse)
traceback()
require("pd.clariom.s.mouse")
eset_filtered <- nsFilter(eset, var.func=IQR,
var.cutoff=0.75, var.filter=TRUE,
filterByQuantile=TRUE)
# Get the annotation GPL id (see Annotation: GPL10558)
gpl <- getGEO('GPL23038', destdir=".")
# Get the annotation GPL id (see Annotation: GPL10558)
require(GEOquery)
gpl <- getGEO('GPL23038', destdir=".")
q(/)
q()
